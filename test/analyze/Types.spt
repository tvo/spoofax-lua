language Lua
module analyze_Types

start symbol Chunk

test nil [[ local [[u]] = nil ]]
build test-type-analysis to [Null]

test boolean [[ local [[u]] = true ]]
build test-type-analysis to [Boolean]

test number [[ local [[u]] = 1 ]]
build test-type-analysis to [Number]

test string [[ local [[u]] = "hi" ]]
build test-type-analysis to [String]

test empty table [[ local [[u]] = {} ]]
build test-type-analysis to [Table([])]

test non empty table [[ local [[u]] = {a=1} ]]
build test-type-analysis to [Table(["a"])]

test function [[ local function [[fun]](x, y) end ]]
build test-type-analysis to [Function(["x","y"])]

test method [[ function [[table:fun]](x, y) end ]]
build test-type-analysis to [Function(["self","x","y"])]

test shuffle [[ local [[x]],y = {a=1},{b=2}; x,y=y,x ]]
build test-type-analysis to [Table(["b", "a"])]

test inferred var / function call [[ do [[u]](u) end ]]
build test-type-analysis to [Function([_])]

test inferred field / field access (1) [[ u.foo=[[u]] ]]
build test-type-analysis to [Table(["foo"])]

test inferred field / field access (2) [[ u.foo=[[u]].bar ]]
build test-type-analysis to [Table(["foo", "bar"])]

test inferred field / function call [[ do [[u.foo]](u) end ]]
build test-type-analysis to [Function([_])]

test inferred field / method call [[ do [[u:foo]](u) end ]]
build test-type-analysis to [Function(["self", _])]

test tablecons are unique [[ local u,[[v]]={},{} u.foo=1 ]]
build test-type-analysis to [Table([])]

test inferred function does not override actual function [[
  function [[u:foo]](x, y) end
  u:foo(x, y)
]]
build test-type-analysis to [Function(["self", "x", "y"])]

test reverse inferred type propagation of function (1) [[
  local x = [[u]]
  u(x,y)
]]
build test-type-analysis to [Function([_, _])]

test reverse inferred type propagation of function (2) [[
  local x = [[u]]
  u(x,y)
  function u(x, y) end
]]
build test-type-analysis to [Function(["x", "y"])]

test reverse inferred type propagation of table [[
  local x = [[u]]
  u.foo = 3
  u = {bar=4}
]]
build test-type-analysis to [Table(["bar", "foo"])]
